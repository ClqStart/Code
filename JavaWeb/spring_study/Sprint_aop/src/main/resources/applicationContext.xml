<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        https://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop
        https://www.springframework.org/schema/aop/spring-aop.xsd">

    <!--注册bean-->
    <bean id="UserServiceImp" class="com.kuang.service.UserServiceImpl"/>
    <bean id="Log" class="com.kuang.log.Log"/>
    <bean id="AfterLog" class="com.kuang.log.AfterLog"/>
    <bean id="diy" class="com.kuang.diy.DiyPointCut"/>

<!--    方法1  导入aop的约束-->
<!--    配置aop:需要导入aop的约束-->
    <aop:config>
        <!--切入点:expression  表达式：execution(要执行的位置：* * * * *)(修饰词，返回值，类名，方法名，参数)-->
        <aop:pointcut id="point" expression="execution(* com.kuang.service.UserServiceImpl.*(..))"/>
        <!--执行环绕增强-->
        <aop:advisor advice-ref="Log" pointcut-ref="point"/>
        <aop:advisor advice-ref="AfterLog" pointcut-ref="point"/>
    </aop:config>

    <!--方法二 自定义类，ref 要引入的类-->
    <aop:config>
        <aop:aspect ref="diy">
            <!--切入点-->
            <aop:pointcut id="point1" expression="execution(* com.kuang.service.UserServiceImpl.*(..))"/>
            <!--通知-->
            <aop:before method="before" pointcut-ref="point1"/>
            <aop:after method="after" pointcut-ref="point1"/>
        </aop:aspect>
    </aop:config>

    <!--方法3-->
    <bean id="annotationPointCut" class="com.kuang.diy.AnnotationPointCut"/>
    <aop:aspectj-autoproxy/>


</beans>
